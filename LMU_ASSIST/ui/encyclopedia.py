import json
import os
from PyQt5 import QtWidgets, QtCore, QtGui

class EncyclopediaTab(QtWidgets.QWidget):
    """–£–ª—É—á—à–µ–Ω–Ω–∞—è –≤–∫–ª–∞–¥–∫–∞ —ç–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏–∏"""
    
    def __init__(self, parent=None):
        super().__init__()
        self.parent = parent
        self.cars_data = self.load_cars_data()
        self.tracks_data = self.load_tracks_data()
        self.setup_ui()
        
    def load_cars_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ–± –∞–≤—Ç–æ–º–æ–±–∏–ª—è—Ö"""
        try:
            with open('data/cars.json', 'r', encoding='utf-8') as f:
                return json.load(f)
        except FileNotFoundError:
            return {"lmu_cars": {}}
    
    def load_tracks_data(self):
        """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ —Ç—Ä–∞—Å—Å–∞—Ö"""
        try:
            with open('data/tracks.json', 'r', encoding='utf-8') as f:
                return json.load(f)
        except FileNotFoundError:
            return {"tracks": {}}
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        layout = QtWidgets.QHBoxLayout()
        self.setLayout(layout)
        
        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º–∏
        left_panel = QtWidgets.QWidget()
        left_layout = QtWidgets.QVBoxLayout(left_panel)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = QtWidgets.QLabel("üìò –≠–Ω—Ü–∏–∫–ª–æ–ø–µ–¥–∏—è LMU")
        title_label.setStyleSheet("font-size: 18px; font-weight: bold; color: #0078d4; margin: 10px;")
        left_layout.addWidget(title_label)
        
        # –°–ø–∏—Å–æ–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        self.category_list = QtWidgets.QListWidget()
        self.category_list.setMaximumWidth(200)
        self.category_list.setStyleSheet("""
            QListWidget {
                background-color: #3c3c3c;
                border: 1px solid #555555;
                border-radius: 4px;
                color: #ffffff;
            }
            QListWidget::item {
                padding: 8px;
                border-bottom: 1px solid #555555;
            }
            QListWidget::item:selected {
                background-color: #0078d4;
            }
            QListWidget::item:hover {
                background-color: #5a5a5a;
            }
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        categories = [
            "üèéÔ∏è –ê–≤—Ç–æ–º–æ–±–∏–ª–∏",
            "üèÅ –¢—Ä–∞—Å—Å—ã", 
            "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
            "üèÜ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏",
            "üìö –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞"
        ]
        
        for category in categories:
            self.category_list.addItem(category)
            
        self.category_list.currentItemChanged.connect(self.on_category_changed)
        left_layout.addWidget(self.category_list)
        
        left_layout.addStretch()
        layout.addWidget(left_panel)
        
        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        self.content_area = QtWidgets.QStackedWidget()
        self.content_area.setStyleSheet("""
            QStackedWidget {
                background-color: #2b2b2b;
                border: 1px solid #555555;
                border-radius: 4px;
            }
        """)
        
        # –°–æ–∑–¥–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –∫–∞–∂–¥–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        self.create_cars_page()
        self.create_tracks_page()
        self.create_setups_page()
        self.create_strategies_page()
        self.create_guides_page()
        
        layout.addWidget(self.content_area, 3)
        
        # –í—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        self.category_list.setCurrentRow(0)
    
    def create_cars_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π"""
        cars_widget = QtWidgets.QWidget()
        layout = QtWidgets.QVBoxLayout(cars_widget)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = QtWidgets.QLabel("üèéÔ∏è –ê–≤—Ç–æ–º–æ–±–∏–ª–∏ Le Mans Ultimate")
        header.setStyleSheet("font-size: 16px; font-weight: bold; margin: 10px;")
        layout.addWidget(header)
        
        # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
        cars_tabs = QtWidgets.QTabWidget()
        cars_tabs.setStyleSheet("""
            QTabWidget::pane {
                border: 1px solid #555555;
                background-color: #3c3c3c;
            }
            QTabBar::tab {
                background-color: #4a4a4a;
                color: #ffffff;
                padding: 6px 12px;
                margin: 1px;
                border-radius: 3px;
            }
            QTabBar::tab:selected {
                background-color: #0078d4;
            }
        """)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π
        for category, cars in self.cars_data.get("lmu_cars", {}).items():
            category_widget = self.create_cars_category_widget(cars)
            cars_tabs.addTab(category_widget, category)
            
        layout.addWidget(cars_tabs)
        self.content_area.addWidget(cars_widget)
    
    def create_cars_category_widget(self, cars_dict):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∏–¥–∂–µ—Ç–∞ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª–µ–π"""
        widget = QtWidgets.QWidget()
        layout = QtWidgets.QVBoxLayout(widget)
        
        # –°–∫—Ä–æ–ª–ª–∏—Ä—É–µ–º–∞—è –æ–±–ª–∞—Å—Ç—å
        scroll = QtWidgets.QScrollArea()
        scroll.setWidgetResizable(True)
        scroll.setStyleSheet("QScrollArea { border: none; }")
        
        content_widget = QtWidgets.QWidget()
        content_layout = QtWidgets.QVBoxLayout(content_widget)
        
        for car_name, car_data in cars_dict.items():
            car_card = self.create_car_card(car_name, car_data)
            content_layout.addWidget(car_card)
            
        content_layout.addStretch()
        scroll.setWidget(content_widget)
        layout.addWidget(scroll)
        
        return widget
    
    def create_car_card(self, car_name, car_data):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è"""
        card = QtWidgets.QGroupBox(car_name)
        card.setStyleSheet("""
            QGroupBox {
                font-weight: bold;
                border: 2px solid #555555;
                border-radius: 5px;
                margin: 5px;
                padding-top: 10px;
                color: #ffffff;
            }
            QGroupBox::title {
                subcontrol-origin: margin;
                left: 10px;
                padding: 0 5px 0 5px;
                color: #0078d4;
            }
        """)
        
        layout = QtWidgets.QVBoxLayout(card)
        
        # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_layout = QtWidgets.QGridLayout()
        
        info_items = [
            ("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:", car_data.get("category", "N/A")),
            ("–ü—Ä–∏–≤–æ–¥:", car_data.get("drivetrain", "N/A")),
            ("–ú–æ—â–Ω–æ—Å—Ç—å:", car_data.get("power", "N/A")),
            ("–í–µ—Å:", car_data.get("weight", "N/A")),
            ("–¢–æ–ø–ª–∏–≤–Ω—ã–π –±–∞–∫:", car_data.get("fuel_capacity", "N/A"))
        ]
        
        for i, (label, value) in enumerate(info_items):
            label_widget = QtWidgets.QLabel(label)
            label_widget.setStyleSheet("font-weight: bold; color: #cccccc;")
            value_widget = QtWidgets.QLabel(value)
            value_widget.setStyleSheet("color: #ffffff;")
            
            info_layout.addWidget(label_widget, i, 0)
            info_layout.addWidget(value_widget, i, 1)
            
        layout.addLayout(info_layout)
        
        # –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
        if "characteristics" in car_data:
            char_label = QtWidgets.QLabel("–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:")
            char_label.setStyleSheet("font-weight: bold; color: #0078d4; margin-top: 10px;")
            layout.addWidget(char_label)
            
            char_layout = QtWidgets.QGridLayout()
            characteristics = car_data["characteristics"]
            
            for i, (key, value) in enumerate(characteristics.items()):
                key_widget = QtWidgets.QLabel(f"{key.replace('_', ' ').title()}:")
                key_widget.setStyleSheet("color: #cccccc;")
                value_widget = QtWidgets.QLabel(value)
                value_widget.setStyleSheet("color: #ffffff;")
                
                char_layout.addWidget(key_widget, i, 0)
                char_layout.addWidget(value_widget, i, 1)
                
            layout.addLayout(char_layout)
        
        return card
    
    def create_tracks_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç—Ä–∞—Å—Å"""
        tracks_widget = QtWidgets.QWidget()
        layout = QtWidgets.QVBoxLayout(tracks_widget)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        header = QtWidgets.QLabel("üèÅ –¢—Ä–∞—Å—Å—ã")
        header.setStyleSheet("font-size: 16px; font-weight: bold; margin: 10px;")
        layout.addWidget(header)
        
        # –°–ø–∏—Å–æ–∫ —Ç—Ä–∞—Å—Å
        tracks_list = QtWidgets.QListWidget()
        tracks_list.setStyleSheet("""
            QListWidget {
                background-color: #3c3c3c;
                border: 1px solid #555555;
                border-radius: 4px;
                color: #ffffff;
            }
            QListWidget::item {
                padding: 10px;
                border-bottom: 1px solid #555555;
            }
            QListWidget::item:selected {
                background-color: #0078d4;
            }
        """)
        
        for track_name in self.tracks_data.get("tracks", {}).keys():
            tracks_list.addItem(f"üèÅ {track_name}")
            
        tracks_list.currentItemChanged.connect(self.on_track_selected)
        
        # –†–∞–∑–¥–µ–ª—è–µ–º –Ω–∞ —Å–ø–∏—Å–æ–∫ –∏ –¥–µ—Ç–∞–ª–∏
        tracks_splitter = QtWidgets.QSplitter(QtCore.Qt.Horizontal)
        tracks_splitter.addWidget(tracks_list)
        
        # –û–±–ª–∞—Å—Ç—å –¥–µ—Ç–∞–ª–µ–π —Ç—Ä–∞—Å—Å—ã
        self.track_details = QtWidgets.QTextBrowser()
        self.track_details.setStyleSheet("""
            QTextBrowser {
                background-color: #2b2b2b;
                border: 1px solid #555555;
                border-radius: 4px;
                color: #ffffff;
                padding: 10px;
            }
        """)
        
        tracks_splitter.addWidget(self.track_details)
        tracks_splitter.setSizes([300, 700])
        
        layout.addWidget(tracks_splitter)
        self.content_area.addWidget(tracks_widget)
    
    def create_setups_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
        setups_widget = QtWidgets.QWidget()
        layout = QtWidgets.QVBoxLayout(setups_widget)
        
        header = QtWidgets.QLabel("‚öôÔ∏è –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º")
        header.setStyleSheet("font-size: 16px; font-weight: bold; margin: 10px;")
        layout.addWidget(header)
        
        content = QtWidgets.QTextBrowser()
        content.setStyleSheet("""
            QTextBrowser {
                background-color: #2b2b2b;
                border: 1px solid #555555;
                border-radius: 4px;
                color: #ffffff;
                padding: 15px;
            }
        """)
        
        setup_guide = """
        <h2 style="color: #0078d4;">üîß –û—Å–Ω–æ–≤—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–æ–±–∏–ª—è</h2>
        
        <h3 style="color: #ffa500;">–ê—ç—Ä–æ–¥–∏–Ω–∞–º–∏–∫–∞</h3>
        <ul>
            <li><b>–ü–µ—Ä–µ–¥–Ω–µ–µ –∫—Ä—ã–ª–æ:</b> –í–ª–∏—è–µ—Ç –Ω–∞ –ø–æ–≤–æ—Ä–∞—á–∏–≤–∞–µ–º–æ—Å—Ç—å –∏ –ø—Ä–∏–∂–∏–º–Ω—É—é —Å–∏–ª—É —Å–ø–µ—Ä–µ–¥–∏</li>
            <li><b>–ó–∞–¥–Ω–µ–µ –∫—Ä—ã–ª–æ:</b> –û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏–∂–∏–º–Ω—É—é —Å–∏–ª—É —Å–∑–∞–¥–∏</li>
            <li><b>–ü—Ä–∞–≤–∏–ª–æ:</b> –ë–æ–ª—å—à–µ –∫—Ä—ã–ª–∞ = –±–æ–ª—å—à–µ –ø—Ä–∏–∂–∏–º–Ω–∞—è —Å–∏–ª–∞, –Ω–æ –º–µ–Ω—å—à–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å</li>
        </ul>
        
        <h3 style="color: #ffa500;">–ü–æ–¥–≤–µ—Å–∫–∞</h3>
        <ul>
            <li><b>–ü—Ä—É–∂–∏–Ω—ã:</b> –ñ–µ—Å—Ç–∫–∏–µ –¥–ª—è –≥–ª–∞–¥–∫–∏—Ö —Ç—Ä–∞—Å—Å, –º—è–≥–∫–∏–µ –¥–ª—è –Ω–µ—Ä–æ–≤–Ω—ã—Ö</li>
            <li><b>–ê–º–æ—Ä—Ç–∏–∑–∞—Ç–æ—Ä—ã:</b> –ö–æ–Ω—Ç—Ä–æ–ª–∏—Ä—É—é—Ç –ø–µ—Ä–µ–Ω–æ—Å –≤–µ—Å–∞</li>
            <li><b>–°—Ç–∞–±–∏–ª–∏–∑–∞—Ç–æ—Ä—ã:</b> –í–ª–∏—è—é—Ç –Ω–∞ –±–∞–ª–∞–Ω—Å –≤ –ø–æ–≤–æ—Ä–æ—Ç–∞—Ö</li>
        </ul>
        
        <h3 style="color: #ffa500;">–¢–æ—Ä–º–æ–∑–∞</h3>
        <ul>
            <li><b>–ë–∞–ª–∞–Ω—Å —Ç–æ—Ä–º–æ–∑–æ–≤:</b> 50-70% (–ø–µ—Ä–µ–¥–Ω–∏–µ/–∑–∞–¥–Ω–∏–µ)</li>
            <li><b>–î–∞–≤–ª–µ–Ω–∏–µ:</b> –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å–∏–ª–∞ —Ç–æ—Ä–º–æ–∂–µ–Ω–∏—è</li>
            <li><b>–í–æ–∑–¥—É—Ö–æ–≤–æ–¥—ã:</b> –û—Ö–ª–∞–∂–¥–µ–Ω–∏–µ —Ç–æ—Ä–º–æ–∑–Ω—ã—Ö –¥–∏—Å–∫–æ–≤</li>
        </ul>
        
        <h3 style="color: #ffa500;">–®–∏–Ω—ã</h3>
        <ul>
            <li><b>–î–∞–≤–ª–µ–Ω–∏–µ:</b> –í–ª–∏—è–µ—Ç –Ω–∞ –∏–∑–Ω–æ—Å –∏ —Å—Ü–µ–ø–ª–µ–Ω–∏–µ</li>
            <li><b>–†–∞–∑–≤–∞–ª:</b> –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–≥–æ –ø—è—Ç–Ω–∞</li>
            <li><b>–°—Ö–æ–∂–¥–µ–Ω–∏–µ:</b> –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å –Ω–∞ –ø—Ä—è–º—ã—Ö</li>
        </ul>
        
        <h3 style="color: #ffa500;">–î–∏—Ñ—Ñ–µ—Ä–µ–Ω—Ü–∏–∞–ª</h3>
        <ul>
            <li><b>–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–∞—è –Ω–∞–≥—Ä—É–∑–∫–∞:</b> –ë–∞–∑–æ–≤–æ–µ –±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ</li>
            <li><b>–ù–∞ —Ç—è–≥–µ:</b> –ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ —É—Å–∫–æ—Ä–µ–Ω–∏–∏</li>
            <li><b>–ù–∞ —Ç–æ—Ä–º–æ–∂–µ–Ω–∏–∏:</b> –ë–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ –∑–∞–º–µ–¥–ª–µ–Ω–∏–∏</li>
        </ul>
        """
        
        content.setHtml(setup_guide)
        layout.addWidget(content)
        self.content_area.addWidget(setups_widget)
    
    def create_strategies_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""
        strategies_widget = QtWidgets.QWidget()
        layout = QtWidgets.QVBoxLayout(strategies_widget)
        
        header = QtWidgets.QLabel("üèÜ –ì–æ–Ω–æ—á–Ω—ã–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏")
        header.setStyleSheet("font-size: 16px; font-weight: bold; margin: 10px;")
        layout.addWidget(header)
        
        content = QtWidgets.QTextBrowser()
        content.setStyleSheet("""
            QTextBrowser {
                background-color: #2b2b2b;
                border: 1px solid #555555;
                border-radius: 4px;
                color: #ffffff;
                padding: 15px;
            }
        """)
        
        strategies_guide = """
        <h2 style="color: #0078d4;">üéØ –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –≥–æ–Ω–æ–∫ –Ω–∞ –≤—ã–Ω–æ—Å–ª–∏–≤–æ—Å—Ç—å</h2>
        
        <h3 style="color: #ffa500;">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–ø–ª–∏–≤–æ–º</h3>
        <ul>
            <li><b>–≠–∫–æ–Ω–æ–º–∏—è —Ç–æ–ø–ª–∏–≤–∞:</b> –£–º–µ–Ω—å—à–µ–Ω–∏–µ –æ–±–æ—Ä–æ—Ç–æ–≤ –Ω–∞ 500-1000 rpm –Ω–∞ –ø—Ä—è–º—ã—Ö</li>
            <li><b>–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∏—Ç-—Å—Ç–æ–ø–æ–≤:</b> –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–π –∑–∞–ø—Ä–∞–≤–∫–∏ –∑–∞—Ä–∞–Ω–µ–µ</li>
            <li><b>–°–º–µ—Å–∏:</b> –ë–æ–≥–∞—Ç–∞—è –¥–ª—è –≥–æ–Ω–∫–∏, –±–µ–¥–Ω–∞—è –¥–ª—è —ç–∫–æ–Ω–æ–º–∏–∏</li>
        </ul>
        
        <h3 style="color: #ffa500;">–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —à–∏–Ω–∞–º–∏</h3>
        <ul>
            <li><b>–ü—Ä–æ–≥—Ä–µ–≤:</b> –ü–ª–∞–≤–Ω–æ–µ —É–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ç–µ–º–ø–∞ –≤ –ø–µ—Ä–≤—ã—Ö –∫—Ä—É–≥–∞—Ö</li>
            <li><b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> –û–ø—Ç–∏–º–∞–ª—å–Ω–∞—è 80-110¬∞C</li>
            <li><b>–ò–∑–Ω–æ—Å:</b> –ò–∑–±–µ–≥–∞–π –±–ª–æ–∫–∏—Ä–æ–≤–æ–∫ –∏ –ø—Ä–æ–±—É–∫—Å–æ–≤–æ–∫</li>
        </ul>
        
        <h3 style="color: #ffa500;">–¢–µ—Ö–Ω–∏–∫–∞ –ø–∏—Ç-—Å—Ç–æ–ø–æ–≤</h3>
        <ul>
            <li><b>–í—ä–µ–∑–¥:</b> –¢–æ—á–Ω–æ –ø–æ–ø–∞–¥–∞–π –≤ –±–æ–∫—Å</li>
            <li><b>–û—Å—Ç–∞–Ω–æ–≤–∫–∞:</b> –ß–µ—Ç–∫–æ –Ω–∞ –æ—Ç–º–µ—Ç–∫–µ</li>
            <li><b>–í—ã–µ–∑–¥:</b> –ù–µ –ø—Ä–µ–≤—ã—à–∞–π –ª–∏–º–∏—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –≤ –ø–∏—Ç-–ª–µ–π–Ω–µ</li>
        </ul>
        
        <h3 style="color: #ffa500;">–¢–∞–∫—Ç–∏–∫–∞ –æ–±–≥–æ–Ω–æ–≤</h3>
        <ul>
            <li><b>–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞:</b> –°–ª–µ–¥—É–π –±–ª–∏–∑–∫–æ –¥–ª—è —Å–ª–∏–ø—Å—Ç—Ä–∏–º–∞</li>
            <li><b>–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ:</b> –ù–∞—á–∏–Ω–∞–π –º–∞–Ω–µ–≤—Ä —Ä–∞–Ω–æ</li>
            <li><b>–ó–∞—â–∏—Ç–∞:</b> –û–¥–Ω–æ –¥–≤–∏–∂–µ–Ω–∏–µ –¥–ª—è –∑–∞—â–∏—Ç—ã –ø–æ–∑–∏—Ü–∏–∏</li>
        </ul>
        
        <h3 style="color: #ffa500;">–ü–æ–≥–æ–¥–Ω—ã–µ —É—Å–ª–æ–≤–∏—è</h3>
        <ul>
            <li><b>–î–æ–∂–¥—å:</b> –ü–ª–∞–≤–Ω—ã–µ –¥–≤–∏–∂–µ–Ω–∏—è, –∏–∑–±–µ–≥–∞–π –ª—É–∂</li>
            <li><b>–ü–µ—Ä–µ—Ö–æ–¥:</b> –í–æ–≤—Ä–µ–º—è –º–µ–Ω—è–π —Ä–µ–∑–∏–Ω—É</li>
            <li><b>–í–∏–¥–∏–º–æ—Å—Ç—å:</b> –£–≤–µ–ª–∏—á–∏–≤–∞–π –¥–∏—Å—Ç–∞–Ω—Ü–∏—é</li>
        </ul>
        """
        
        content.setHtml(strategies_guide)
        layout.addWidget(content)
        self.content_area.addWidget(strategies_widget)
    
    def create_guides_page(self):
        """–°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤"""
        guides_widget = QtWidgets.QWidget()
        layout = QtWidgets.QVBoxLayout(guides_widget)
        
        header = QtWidgets.QLabel("üìö –û–±—É—á–∞—é—â–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã")
        header.setStyleSheet("font-size: 16px; font-weight: bold; margin: 10px;")
        layout.addWidget(header)
        
        content = QtWidgets.QTextBrowser()
        content.setStyleSheet("""
            QTextBrowser {
                background-color: #2b2b2b;
                border: 1px solid #555555;
                border-radius: 4px;
                color: #ffffff;
                padding: 15px;
            }
        """)
        
        guides_content = """
        <h2 style="color: #0078d4;">üéì –†—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö</h2>
        
        <h3 style="color: #ffa500;">–û—Å–Ω–æ–≤—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</h3>
        <ul>
            <li><b>–ü–æ–ª–æ–∂–µ–Ω–∏–µ —Ä—É–∫:</b> 9:15 –∏–ª–∏ 10:10 –Ω–∞ —Ä—É–ª–µ</li>
            <li><b>–¢–æ—Ä–º–æ–∂–µ–Ω–∏–µ:</b> –ü–ª–∞–≤–Ω–æ–µ –Ω–∞–∂–∞—Ç–∏–µ –∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–µ</li>
            <li><b>–£—Å–∫–æ—Ä–µ–Ω–∏–µ:</b> –ü—Ä–æ–≥—Ä–µ—Å—Å–∏–≤–Ω–æ–µ –æ—Ç–∫—Ä—ã—Ç–∏–µ –≥–∞–∑–∞</li>
            <li><b>–¢—Ä–∞–µ–∫—Ç–æ—Ä–∏—è:</b> –ü–æ–∑–¥–Ω–∏–π –≤—Ö–æ–¥, —Ä–∞–Ω–Ω–∏–π –≤—ã—Ö–æ–¥</li>
        </ul>
        
        <h3 style="color: #ffa500;">–¢–µ—Ö–Ω–∏–∫–∞ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –ø–æ–≤–æ—Ä–æ—Ç–æ–≤</h3>
        <ul>
            <li><b>–¢–æ—Ä–º–æ–∂–µ–Ω–∏–µ:</b> –î–æ –ø–æ–≤–æ—Ä–æ—Ç–∞ –ø–æ –ø—Ä—è–º–æ–π</li>
            <li><b>–í—Ö–æ–¥:</b> –ü–ª–∞–≤–Ω–æ –¥–æ–≤–µ—Ä–Ω—É—Ç—å –∫ –∞–ø–µ–∫—Å—É</li>
            <li><b>–ê–ø–µ–∫—Å:</b> –°–∞–º–∞—è –±–ª–∏–∑–∫–∞—è —Ç–æ—á–∫–∞ –∫ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–º—É –∫—Ä–∞—é</li>
            <li><b>–í—ã—Ö–æ–¥:</b> –†–∞–Ω–Ω–µ–µ —É—Å–∫–æ—Ä–µ–Ω–∏–µ —Å —Ä–∞—Å–ø—É—Å–∫–∞–Ω–∏–µ–º —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏</li>
        </ul>
        
        <h3 style="color: #ffa500;">–ê–Ω–∞–ª–∏–∑ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏</h3>
        <ul>
            <li><b>–í—Ä–µ–º—è –∫—Ä—É–≥–æ–≤:</b> –°—Ä–∞–≤–Ω–∏–≤–∞–π —Å —ç—Ç–∞–ª–æ–Ω–æ–º</li>
            <li><b>–°–µ–∫—Ç–æ—Ä—ã:</b> –ù–∞–π–¥–∏ —Å–ª–∞–±—ã–µ –º–µ—Å—Ç–∞</li>
            <li><b>–°–∫–æ—Ä–æ—Å—Ç–∏:</b> –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–∫–æ—Ä–æ—Å—Ç—å –≤ –ø–æ–≤–æ—Ä–æ—Ç–∞—Ö</li>
            <li><b>G-—Å–∏–ª—ã:</b> –û—Ü–µ–Ω–∏–≤–∞–π –ø–ª–∞–≤–Ω–æ—Å—Ç—å –≤–æ–∂–¥–µ–Ω–∏—è</li>
        </ul>
        
        <h3 style="color: #ffa500;">–ú–µ–Ω—Ç–∞–ª—å–Ω–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞</h3>
        <ul>
            <li><b>–ö–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è:</b> –°–æ—Å—Ä–µ–¥–æ—Ç–æ—á—å—Å—è –Ω–∞ –ø—Ä–æ—Ü–µ—Å—Å–µ</li>
            <li><b>–¢–µ—Ä–ø–µ–Ω–∏–µ:</b> –ü—Ä–æ–≥—Ä–µ—Å—Å –ø—Ä–∏—Ö–æ–¥–∏—Ç —Å–æ –≤—Ä–µ–º–µ–Ω–µ–º</li>
            <li><b>–ê–Ω–∞–ª–∏–∑:</b> –ò–∑—É—á–∞–π —Å–≤–æ–∏ –æ—à–∏–±–∫–∏</li>
            <li><b>–ü—Ä–∞–∫—Ç–∏–∫–∞:</b> –†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏</li>
        </ul>
        
        <h3 style="color: #ffa500;">–ü–æ–ª–µ–∑–Ω—ã–µ —Ä–µ—Å—É—Ä—Å—ã</h3>
        <ul>
            <li><b>–í–∏–¥–µ–æ:</b> –ó–∞–ø–∏—Å–∏ –±—ã—Å—Ç—Ä—ã—Ö –∫—Ä—É–≥–æ–≤</li>
            <li><b>–ì–∞–π–¥—ã:</b> –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –¥–ª—è —Ç—Ä–∞—Å—Å —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–∞</li>
            <li><b>–°–æ–æ–±—â–µ—Å—Ç–≤–æ:</b> –§–æ—Ä—É–º—ã –∏ Discord —Å–µ—Ä–≤–µ—Ä—ã</li>
            <li><b>–¢—Ä–µ–Ω–µ—Ä—ã:</b> –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ</li>
        </ul>
        """
        
        content.setHtml(guides_content)
        layout.addWidget(content)
        self.content_area.addWidget(guides_widget)
    
    def on_category_changed(self, current, previous):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–º–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏"""
        if current:
            row = self.category_list.row(current)
            self.content_area.setCurrentIndex(row)
    
    def on_track_selected(self, current, previous):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ —Ç—Ä–∞—Å—Å—ã"""
        if current:
            track_name = current.text().replace("üèÅ ", "")
            track_data = self.tracks_data.get("tracks", {}).get(track_name, {})
            
            if track_data:
                self.display_track_details(track_name, track_data)
    
    def display_track_details(self, track_name, track_data):
        """–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–µ—Ç–∞–ª–µ–π —Ç—Ä–∞—Å—Å—ã"""
        html_content = f"""
        <h2 style="color: #0078d4;">üèÅ {track_name}</h2>
        <h3 style="color: #ffa500;">{track_data.get('full_name', '')}</h3>
        
        <h4>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</h4>
        <ul>
            <li><b>–°—Ç—Ä–∞–Ω–∞:</b> {track_data.get('country', 'N/A')}</li>
            <li><b>–î–ª–∏–Ω–∞:</b> {track_data.get('length', 'N/A')} –∫–º</li>
            <li><b>–ü–æ–≤–æ—Ä–æ—Ç—ã:</b> {track_data.get('corners', 'N/A')}</li>
            <li><b>–†–µ–∫–æ—Ä–¥ –∫—Ä—É–≥–∞:</b> {track_data.get('lap_record', 'N/A')}</li>
        </ul>
        
        <h4>–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:</h4>
        <ul>
        """
        
        characteristics = track_data.get('characteristics', {})
        for key, value in characteristics.items():
            html_content += f"<li><b>{key.replace('_', ' ').title()}:</b> {value}</li>"
        
        html_content += "</ul>"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–∫—Ç–æ—Ä–∞—Ö
        if 'sectors' in track_data:
            html_content += "<h4>–°–µ–∫—Ç–æ—Ä–∞:</h4>"
            for i, sector in enumerate(track_data['sectors'], 1):
                html_content += f"""
                <h5 style="color: #ffa500;">–°–µ–∫—Ç–æ—Ä {i}: {sector.get('name', '')}</h5>
                <p>{sector.get('description', '')}</p>
                <p><b>–ö–ª—é—á–µ–≤—ã–µ –ø–æ–≤–æ—Ä–æ—Ç—ã:</b> {', '.join(sector.get('key_corners', []))}</p>
                <p><b>–§–æ–∫—É—Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b> {sector.get('setup_focus', '')}</p>
                """
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
        if 'setup_recommendations' in track_data:
            html_content += "<h4>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ:</h4>"
            setup_recs = track_data['setup_recommendations']
            
            for category, settings in setup_recs.items():
                html_content += f"<h5 style='color: #ffa500;'>{category.title()}:</h5><ul>"
                for setting, value in settings.items():
                    if setting != 'reason':
                        html_content += f"<li><b>{setting.replace('_', ' ').title()}:</b> {value}</li>"
                if 'reason' in settings:
                    html_content += f"<li><i>–ü—Ä–∏—á–∏–Ω–∞: {settings['reason']}</i></li>"
                html_content += "</ul>"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–≤–µ—Ç—ã –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é
        if 'driving_tips' in track_data:
            html_content += "<h4>–°–æ–≤–µ—Ç—ã –ø–æ –≤–æ–∂–¥–µ–Ω–∏—é:</h4><ul>"
            for tip in track_data['driving_tips']:
                html_content += f"<li>{tip}</li>"
            html_content += "</ul>"
        
        self.track_details.setHtml(html_content)
