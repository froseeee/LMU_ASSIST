#!/usr/bin/env python3
"""
–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã —Ç–µ–º LMU Assistant
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –∏—Ö —Å—Ç–∏–ª–∏
"""

import sys
from PyQt5.QtWidgets import (
    QApplication, QMainWindow, QWidget, QVBoxLayout, QHBoxLayout, 
    QTabWidget, QScrollArea, QGridLayout, QLabel, QLineEdit, QComboBox,
    QCheckBox, QRadioButton, QSlider, QProgressBar, QPushButton, QGroupBox
)
from PyQt5.QtCore import Qt, QTimer
from PyQt5.QtGui import QFont

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à—É —Å–∏—Å—Ç–µ–º—É —Ç–µ–º
from theme import apply_theme, ThemeType, get_current_theme, set_widget_style_class
from theme_utils import (
    ModernCard, ModernButton, LoadingSpinner, ProgressCard, StatCard,
    NotificationToast, GlassPanel, ModernSlider, IconButton, ModernDialog,
    show_notification, create_separator, apply_glow_effect
)


class ThemeDemo(QMainWindow):
    """–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ç–µ–º"""
    
    def __init__(self):
        super().__init__()
        self.current_theme = ThemeType.DARK
        self.notification_counter = 0
        self.setup_ui()
        self.setup_demo_timer()
        
        # –ü—Ä–∏–º–µ–Ω—è–µ–º —Ç–µ–º—É
        apply_theme(QApplication.instance(), self.current_theme)
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"""
        self.setWindowTitle("LMU Assistant - Theme Demo")
        self.setGeometry(100, 100, 1400, 900)
        
        # –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –≤–∏–¥–∂–µ—Ç
        central_widget = QWidget()
        self.setCentralWidget(central_widget)
        
        layout = QVBoxLayout(central_widget)
        layout.setContentsMargins(20, 20, 20, 20)
        layout.setSpacing(20)
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏
        self.create_header(layout)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ —Ç–∞–±–∞—Ö
        self.create_content_tabs(layout)
        
        # –°—Ç–∞—Ç—É—Å –±–∞—Ä
        self.statusBar().showMessage("üé® Theme Demo - –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç–µ–º LMU Assistant")
    
    def create_header(self, parent_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∞"""
        header_layout = QHBoxLayout()
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title = QLabel("üé® LMU Assistant Theme Demo")
        title.setStyleSheet("""
            QLabel {
                font-size: 32px;
                font-weight: 700;
                margin: 16px 0;
            }
        """)
        header_layout.addWidget(title)
        
        header_layout.addStretch()
        
        # –ö–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º
        theme_layout = QHBoxLayout()
        theme_layout.setSpacing(8)
        
        dark_btn = ModernButton("üåô Dark", "primary")
        dark_btn.clicked.connect(lambda: self.switch_theme(ThemeType.DARK))
        theme_layout.addWidget(dark_btn)
        
        light_btn = ModernButton("‚òÄÔ∏è Light", "secondary")
        light_btn.clicked.connect(lambda: self.switch_theme(ThemeType.LIGHT))
        theme_layout.addWidget(light_btn)
        
        racing_btn = ModernButton("üèÅ Racing", "danger")
        racing_btn.clicked.connect(lambda: self.switch_theme(ThemeType.RACING))
        theme_layout.addWidget(racing_btn)
        
        # –ö–Ω–æ–ø–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
        notify_btn = ModernButton("üîî Test Notification", "success")
        notify_btn.clicked.connect(self.show_test_notification)
        theme_layout.addWidget(notify_btn)
        
        header_layout.addLayout(theme_layout)
        parent_layout.addLayout(header_layout)
        
        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        parent_layout.addWidget(create_separator())
    
    def create_content_tabs(self, parent_layout):
        """–°–æ–∑–¥–∞–Ω–∏–µ –≤–∫–ª–∞–¥–æ–∫ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º"""
        tabs = QTabWidget()
        
        # –í–∫–ª–∞–¥–∫–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        components_tab = self.create_components_tab()
        tabs.addTab(components_tab, "üß© Components")
        
        # –í–∫–ª–∞–¥–∫–∞ –∫–∞—Ä—Ç–æ—á–µ–∫
        cards_tab = self.create_cards_tab()
        tabs.addTab(cards_tab, "üÉè Cards")
        
        # –í–∫–ª–∞–¥–∫–∞ —Ñ–æ—Ä–º
        forms_tab = self.create_forms_tab()
        tabs.addTab(forms_tab, "üìù Forms")
        
        # –í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        stats_tab = self.create_stats_tab()
        tabs.addTab(stats_tab, "üìä Statistics")
        
        parent_layout.addWidget(tabs)
    
    def create_components_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤"""
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)
        scroll.setFrameShape(scroll.NoFrame)
        
        content = QWidget()
        layout = QVBoxLayout(content)
        layout.setSpacing(24)
        
        # –ö–Ω–æ–ø–∫–∏
        buttons_group = QGroupBox("–ö–Ω–æ–ø–∫–∏")
        buttons_layout = QHBoxLayout(buttons_group)
        
        primary_btn = ModernButton("Primary", "primary")
        secondary_btn = ModernButton("Secondary", "secondary")
        success_btn = ModernButton("Success", "success")
        warning_btn = ModernButton("Warning", "warning")
        danger_btn = ModernButton("Danger", "danger")
        ghost_btn = ModernButton("Ghost", "ghost")
        
        for btn in [primary_btn, secondary_btn, success_btn, warning_btn, danger_btn, ghost_btn]:
            buttons_layout.addWidget(btn)
        
        layout.addWidget(buttons_group)
        
        # –ò–∫–æ–Ω–æ—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
        icon_buttons_group = QGroupBox("–ò–∫–æ–Ω–æ—á–Ω—ã–µ –∫–Ω–æ–ø–∫–∏")
        icon_layout = QHBoxLayout(icon_buttons_group)
        
        icons = ["‚öôÔ∏è", "üéØ", "üìä", "üîç", "üíæ", "üîÑ", "‚ùå"]
        for icon in icons:
            icon_btn = IconButton(icon, 40)
            icon_layout.addWidget(icon_btn)
        
        layout.addWidget(icon_buttons_group)
        
        # –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
        form_group = QGroupBox("–≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º")
        form_layout = QGridLayout(form_group)
        
        # –¢–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è
        form_layout.addWidget(QLabel("–¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ:"), 0, 0)
        line_edit = QLineEdit("–ü—Ä–∏–º–µ—Ä —Ç–µ–∫—Å—Ç–∞")
        form_layout.addWidget(line_edit, 0, 1)
        
        # –ö–æ–º–±–æ–±–æ–∫—Å
        form_layout.addWidget(QLabel("–í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫:"), 1, 0)
        combo = QComboBox()
        combo.addItems(["–û–ø—Ü–∏—è 1", "–û–ø—Ü–∏—è 2", "–û–ø—Ü–∏—è 3"])
        form_layout.addWidget(combo, 1, 1)
        
        # –ß–µ–∫–±–æ–∫—Å—ã
        form_layout.addWidget(QLabel("–ß–µ–∫–±–æ–∫—Å—ã:"), 2, 0)
        check_layout = QHBoxLayout()
        check1 = QCheckBox("–û–ø—Ü–∏—è A")
        check2 = QCheckBox("–û–ø—Ü–∏—è B")
        check3 = QCheckBox("–û–ø—Ü–∏—è C")
        check1.setChecked(True)
        check_layout.addWidget(check1)
        check_layout.addWidget(check2)
        check_layout.addWidget(check3)
        form_layout.addLayout(check_layout, 2, 1)
        
        # –†–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏
        form_layout.addWidget(QLabel("–†–∞–¥–∏–æ–∫–Ω–æ–ø–∫–∏:"), 3, 0)
        radio_layout = QHBoxLayout()
        radio1 = QRadioButton("–í—ã–±–æ—Ä 1")
        radio2 = QRadioButton("–í—ã–±–æ—Ä 2")
        radio3 = QRadioButton("–í—ã–±–æ—Ä 3")
        radio2.setChecked(True)
        radio_layout.addWidget(radio1)
        radio_layout.addWidget(radio2)
        radio_layout.addWidget(radio3)
        form_layout.addLayout(radio_layout, 3, 1)
        
        layout.addWidget(form_group)
        
        # –°–ª–∞–π–¥–µ—Ä—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã
        controls_group = QGroupBox("–°–ª–∞–π–¥–µ—Ä—ã –∏ –ø—Ä–æ–≥—Ä–µ—Å—Å")
        controls_layout = QVBoxLayout(controls_group)
        
        # –û–±—ã—á–Ω—ã–π —Å–ª–∞–π–¥–µ—Ä
        slider = QSlider(Qt.Horizontal)
        slider.setRange(0, 100)
        slider.setValue(75)
        controls_layout.addWidget(QLabel("–û–±—ã—á–Ω—ã–π —Å–ª–∞–π–¥–µ—Ä:"))
        controls_layout.addWidget(slider)
        
        # –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ª–∞–π–¥–µ—Ä
        modern_slider = ModernSlider("–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π —Å–ª–∞–π–¥–µ—Ä", 0, 100, 60, "%")
        controls_layout.addWidget(modern_slider)
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã
        controls_layout.addWidget(QLabel("–ü—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä—ã:"))
        
        progress1 = QProgressBar()
        progress1.setValue(45)
        controls_layout.addWidget(progress1)
        
        progress2 = QProgressBar()
        progress2.setValue(78)
        set_widget_style_class(progress2, "success")
        controls_layout.addWidget(progress2)
        
        progress3 = QProgressBar()
        progress3.setValue(90)
        set_widget_style_class(progress3, "warning")
        controls_layout.addWidget(progress3)
        
        layout.addWidget(controls_group)
        
        # –°–ø–∏–Ω–Ω–µ—Ä—ã
        spinners_group = QGroupBox("–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∑–∞–≥—Ä—É–∑–∫–∏")
        spinners_layout = QHBoxLayout(spinners_group)
        
        for size in [16, 24, 32, 48]:
            spinner = LoadingSpinner(size)
            spinner.start()
            spinners_layout.addWidget(spinner)
        
        layout.addWidget(spinners_group)
        
        scroll.setWidget(content)
        return scroll
    
    def create_cards_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ —Å –∫–∞—Ä—Ç–æ—á–∫–∞–º–∏"""
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)
        scroll.setFrameShape(scroll.NoFrame)
        
        content = QWidget()
        layout = QVBoxLayout(content)
        layout.setSpacing(24)
        
        # –û–±—ã—á–Ω—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        cards_layout = QGridLayout()
        
        # –ü—Ä–æ—Å—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
        simple_card = ModernCard(
            "–ü—Ä–æ—Å—Ç–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞",
            "–≠—Ç–æ –ø—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —Å –∑–∞–≥–æ–ª–æ–≤–∫–æ–º –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º."
        )
        cards_layout.addWidget(simple_card, 0, 0)
        
        # –ö–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞
        clickable_card = ModernCard(
            "–ö–ª–∏–∫–∞–±–µ–ª—å–Ω–∞—è –∫–∞—Ä—Ç–æ—á–∫–∞",
            "–≠—Ç–∞ –∫–∞—Ä—Ç–æ—á–∫–∞ —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –∫–ª–∏–∫–∏ –∏ –∏–º–µ–µ—Ç –∞–Ω–∏–º–∞—Ü–∏–∏.",
            clickable=True
        )
        clickable_card.clicked.connect(lambda: self.show_notification("–ö–∞—Ä—Ç–æ—á–∫–∞ –Ω–∞–∂–∞—Ç–∞!", "info"))
        cards_layout.addWidget(clickable_card, 0, 1)
        
        # –°—Ç–µ–∫–ª—è–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å
        glass_panel = GlassPanel()
        glass_layout = QVBoxLayout(glass_panel)
        glass_layout.addWidget(QLabel("üåü –°—Ç–µ–∫–ª—è–Ω–Ω–∞—è –ø–∞–Ω–µ–ª—å"))
        glass_layout.addWidget(QLabel("–ü–∞–Ω–µ–ª—å —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º —Ä–∞–∑–º—ã—Ç–æ–≥–æ —Å—Ç–µ–∫–ª–∞"))
        apply_glow_effect(glass_panel)
        cards_layout.addWidget(glass_panel, 0, 2)
        
        layout.addLayout(cards_layout)
        
        # –ö–∞—Ä—Ç–æ—á–∫–∏ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        progress_layout = QHBoxLayout()
        
        progress_card1 = ProgressCard("–ó–∞–¥–∞—á–∞ A", 65)
        progress_card2 = ProgressCard("–ó–∞–¥–∞—á–∞ B", 90)
        progress_card3 = ProgressCard("–ó–∞–¥–∞—á–∞ C", 30)
        
        progress_layout.addWidget(progress_card1)
        progress_layout.addWidget(progress_card2)
        progress_layout.addWidget(progress_card3)
        
        layout.addLayout(progress_layout)
        
        scroll.setWidget(content)
        return scroll
    
    def create_forms_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ —Å —Ñ–æ—Ä–º–∞–º–∏"""
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)
        scroll.setFrameShape(scroll.NoFrame)
        
        content = QWidget()
        layout = QVBoxLayout(content)
        layout.setSpacing(24)
        
        # –§–æ—Ä–º–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_card = ModernCard("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è", "")
        settings_layout = QVBoxLayout()
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–ª–µ–º–µ—Ç—Ä–∏–∏
        telemetry_group = QGroupBox("–¢–µ–ª–µ–º–µ—Ç—Ä–∏—è")
        telemetry_layout = QGridLayout(telemetry_group)
        
        telemetry_layout.addWidget(QLabel("UDP –ü–æ—Ä—Ç:"), 0, 0)
        port_edit = QLineEdit("20777")
        telemetry_layout.addWidget(port_edit, 0, 1)
        
        telemetry_layout.addWidget(QLabel("–ß–∞—Å—Ç–æ—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"), 1, 0)
        frequency_slider = ModernSlider("", 10, 100, 50, " –º—Å")
        telemetry_layout.addWidget(frequency_slider, 1, 1)
        
        settings_layout.addWidget(telemetry_group)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        display_group = QGroupBox("–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ")
        display_layout = QVBoxLayout(display_group)
        
        fps_check = QCheckBox("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å FPS")
        fps_check.setChecked(True)
        display_layout.addWidget(fps_check)
        
        overlay_check = QCheckBox("–í–∫–ª—é—á–∏—Ç—å –æ–≤–µ—Ä–ª–µ–π")
        overlay_check.setChecked(True)
        display_layout.addWidget(overlay_check)
        
        smooth_check = QCheckBox("–ü–ª–∞–≤–Ω–∞—è –∞–Ω–∏–º–∞—Ü–∏—è")
        smooth_check.setChecked(True)
        display_layout.addWidget(smooth_check)
        
        settings_layout.addWidget(display_group)
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        actions_layout = QHBoxLayout()
        save_btn = ModernButton("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", "success")
        reset_btn = ModernButton("üîÑ –°–±—Ä–æ—Å–∏—Ç—å", "secondary")
        cancel_btn = ModernButton("‚ùå –û—Ç–º–µ–Ω–∞", "ghost")
        
        actions_layout.addWidget(save_btn)
        actions_layout.addWidget(reset_btn)
        actions_layout.addStretch()
        actions_layout.addWidget(cancel_btn)
        
        settings_layout.addLayout(actions_layout)
        settings_card.layout().addLayout(settings_layout)
        
        layout.addWidget(settings_card)
        
        scroll.setWidget(content)
        return scroll
    
    def create_stats_tab(self):
        """–í–∫–ª–∞–¥–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        scroll = QScrollArea()
        scroll.setWidgetResizable(True)
        scroll.setFrameShape(scroll.NoFrame)
        
        content = QWidget()
        layout = QVBoxLayout(content)
        layout.setSpacing(24)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏—á–µ—Å–∫–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏
        stats_layout = QGridLayout()
        
        # –û—Å–Ω–æ–≤–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats_data = [
            ("–í—Å–µ–≥–æ –∫—Ä—É–≥–æ–≤", "1,247", "üèÅ", None),
            ("–õ—É—á—à–∏–π –∫—Ä—É–≥", "1:23.456", "‚è±Ô∏è", "#10B981"),
            ("–°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å", "187 –∫–º/—á", "üèéÔ∏è", "#3B82F6"),
            ("–í—Ä–µ–º—è –≤ –∏–≥—Ä–µ", "142 —á", "‚è∞", "#F59E0B"),
            ("–ê–≤–∞—Ä–∏–π", "23", "üí•", "#EF4444"),
            ("–ü–æ–¥–∏—É–º–æ–≤", "89", "üèÜ", "#F59E0B"),
        ]
        
        for i, (title, value, icon, color) in enumerate(stats_data):
            row = i // 3
            col = i % 3
            
            stat_card = StatCard(title, value, icon, color)
            stats_layout.addWidget(stat_card, row, col)
        
        layout.addLayout(stats_layout)
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        info_card = ModernCard("üìà –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏", "")
        info_layout = QVBoxLayout()
        
        # –ü—Ä–æ–≥—Ä–µ—Å—Å –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        categories = [
            ("–¢–æ—Ä–º–æ–∂–µ–Ω–∏–µ", 85),
            ("–£—Å–∫–æ—Ä–µ–Ω–∏–µ", 78),
            ("–ü–æ–≤–æ—Ä–æ—Ç—ã", 92),
            ("–ö–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç—å", 67),
        ]
        
        for category, progress in categories:
            cat_layout = QHBoxLayout()
            cat_layout.addWidget(QLabel(category))
            cat_layout.addStretch()
            
            progress_bar = QProgressBar()
            progress_bar.setValue(progress)
            progress_bar.setFixedWidth(200)
            
            # –¶–≤–µ—Ç –ø–æ —É—Ä–æ–≤–Ω—é
            if progress >= 80:
                set_widget_style_class(progress_bar, "success")
            elif progress >= 60:
                set_widget_style_class(progress_bar, "warning")
            
            cat_layout.addWidget(progress_bar)
            cat_layout.addWidget(QLabel(f"{progress}%"))
            
            info_layout.addLayout(cat_layout)
        
        info_card.layout().addLayout(info_layout)
        layout.addWidget(info_card)
        
        scroll.setWidget(content)
        return scroll
    
    def switch_theme(self, theme_type: ThemeType):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ç–µ–º—ã"""
        self.current_theme = theme_type
        apply_theme(QApplication.instance(), theme_type)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        theme_names = {
            ThemeType.DARK: "Dark",
            ThemeType.LIGHT: "Light", 
            ThemeType.RACING: "Racing"
        }
        
        self.show_notification(
            f"–¢–µ–º–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –Ω–∞ {theme_names[theme_type]}",
            "success"
        )
    
    def show_test_notification(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
        self.notification_counter += 1
        
        types = ["info", "success", "warning", "error"]
        messages = [
            f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ #{self.notification_counter}",
            f"–û–ø–µ—Ä–∞—Ü–∏—è #{self.notification_counter} –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!",
            f"–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ #{self.notification_counter}",
            f"–û—à–∏–±–∫–∞ #{self.notification_counter} - —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫"
        ]
        
        notification_type = types[self.notification_counter % len(types)]
        message = messages[self.notification_counter % len(messages)]
        
        self.show_notification(message, notification_type)
    
    def show_notification(self, message: str, notification_type: str = "info"):
        """–ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ"""
        show_notification(message, notification_type, 3000, self)
    
    def setup_demo_timer(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–∞–π–º–µ—Ä–∞ –¥–ª—è –¥–µ–º–æ-—ç—Ñ—Ñ–µ–∫—Ç–æ–≤"""
        self.demo_timer = QTimer()
        self.demo_timer.timeout.connect(self.update_demo_stats)
        self.demo_timer.start(2000)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 2 —Å–µ–∫—É–Ω–¥—ã
    
    def update_demo_stats(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–µ–º–æ-—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏"""
        # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π
        pass


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–µ–º–æ"""
    app = QApplication(sys.argv)
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    app.setApplicationName("LMU Assistant Theme Demo")
    app.setApplicationVersion("2.0.1")
    
    # –°–æ–∑–¥–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ–º–æ
    demo = ThemeDemo()
    demo.show()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    sys.exit(app.exec_())


if __name__ == "__main__":
    main()
